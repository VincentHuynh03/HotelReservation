// <auto-generated />
using System;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;
using ReservationHotel.Models;

#nullable disable

namespace ReservationHotel.Migrations
{
    [DbContext(typeof(ApplicationDbContext))]
    [Migration("20231106170311_InitialCreate")]
    partial class InitialCreate
    {
        /// <inheritdoc />
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "7.0.12")
                .HasAnnotation("Relational:MaxIdentifierLength", 128);

            SqlServerModelBuilderExtensions.UseIdentityColumns(modelBuilder);

            modelBuilder.Entity("ReservationHotel.Models.Chambre", b =>
                {
                    b.Property<int>("ChambreId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("ChambreId"));

                    b.Property<string>("Description")
                        .IsRequired()
                        .HasMaxLength(6000)
                        .HasColumnType("VARCHAR");

                    b.Property<int?>("Lit")
                        .IsRequired()
                        .HasColumnType("int");

                    b.Property<int?>("MaxPersonne")
                        .IsRequired()
                        .HasColumnType("int");

                    b.Property<string>("NumeroChambre")
                        .IsRequired()
                        .HasMaxLength(10)
                        .HasColumnType("VARCHAR");

                    b.Property<string>("Photo")
                        .HasColumnType("nvarchar(max)");

                    b.Property<decimal?>("Prix")
                        .IsRequired()
                        .HasColumnType("decimal(18, 2)");

                    b.Property<int?>("QuantitePersonnes")
                        .IsRequired()
                        .HasColumnType("int");

                    b.Property<string>("TypeChambre")
                        .IsRequired()
                        .HasMaxLength(200)
                        .HasColumnType("VARCHAR");

                    b.Property<string>("Vue")
                        .IsRequired()
                        .HasMaxLength(6000)
                        .HasColumnType("VARCHAR");

                    b.HasKey("ChambreId");

                    b.ToTable("Chambres");
                });

            modelBuilder.Entity("ReservationHotel.Models.Reservation", b =>
                {
                    b.Property<int>("ReservationId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("ReservationId"));

                    b.Property<bool?>("Annuler")
                        .IsRequired()
                        .HasColumnType("bit");

                    b.Property<int>("ChambreId")
                        .HasColumnType("int");

                    b.Property<DateTime?>("DateDebut")
                        .IsRequired()
                        .HasColumnType("DateTime");

                    b.Property<DateTime?>("DateFin")
                        .IsRequired()
                        .HasColumnType("DateTime");

                    b.Property<int>("UserId")
                        .HasColumnType("int");

                    b.HasKey("ReservationId");

                    b.HasIndex("ChambreId");

                    b.HasIndex("UserId");

                    b.ToTable("Reservations");
                });

            modelBuilder.Entity("ReservationHotel.Models.Utilisateur", b =>
                {
                    b.Property<int>("UserId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("UserId"));

                    b.Property<string>("Email")
                        .IsRequired()
                        .HasMaxLength(50)
                        .HasColumnType("VARCHAR");

                    b.Property<string>("MotDePasse")
                        .IsRequired()
                        .HasMaxLength(200)
                        .HasColumnType("VARCHAR");

                    b.Property<string>("Nom")
                        .IsRequired()
                        .HasMaxLength(20)
                        .HasColumnType("VARCHAR");

                    b.Property<string>("Prenom")
                        .IsRequired()
                        .HasMaxLength(20)
                        .HasColumnType("VARCHAR");

                    b.HasKey("UserId");

                    b.ToTable("Utilisateurs");
                });

            modelBuilder.Entity("ReservationHotel.Models.Reservation", b =>
                {
                    b.HasOne("ReservationHotel.Models.Chambre", "Chambre")
                        .WithMany("Reservations")
                        .HasForeignKey("ChambreId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("ReservationHotel.Models.Utilisateur", "Utilisateur")
                        .WithMany("Reservations")
                        .HasForeignKey("UserId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Chambre");

                    b.Navigation("Utilisateur");
                });

            modelBuilder.Entity("ReservationHotel.Models.Chambre", b =>
                {
                    b.Navigation("Reservations");
                });

            modelBuilder.Entity("ReservationHotel.Models.Utilisateur", b =>
                {
                    b.Navigation("Reservations");
                });
#pragma warning restore 612, 618
        }
    }
}
